<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>..\TrainReservation.UI\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <NoWarn>$(NoWarn);1591</NoWarn>
    <RootNamespace>TrainReservation</RootNamespace>
  </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|AnyCPU'">
	    <TypeScriptExperimentalDecorators>True</TypeScriptExperimentalDecorators>
	    <TypeScriptEmitDecoratorMetadata>True</TypeScriptEmitDecoratorMetadata>
    </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AspNetCore.HealthChecks.SqlServer" Version="5.0.3" />
    <PackageReference Include="AspNetCore.HealthChecks.UI.Client" Version="5.0.1" />
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="8.1.1" />
    <PackageReference Include="FluentValidation.AspNetCore" Version="10.3.6" />
    <PackageReference Include="FluentValidation.DependencyInjectionExtensions" Version="10.3.6" />
    <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="5.0.10" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.10" />
    <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks.EntityFrameworkCore" Version="5.0.10" />
    <PackageReference Include="Microsoft.Extensions.Options" Version="5.0.0" />
    <PackageReference Include="Microsoft.FeatureManagement" Version="3.5.0" />
    <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="4.4.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="5.0.2" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.2.1" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
	<None Remove="..\TrainReservation.UI\bin\Debug\net5.0\**" />
	<None Remove="..\TrainReservation.UI\bin\Release\net5.0\**" />
	<None Remove="..\TrainReservation.UI\dist\**" />
	<None Remove="..\TrainReservation.UI\e2e\**" />
	<None Remove="..\TrainReservation.UI\obj\**" />
	<None Remove="..\TrainReservation.UI\src\**" />
    <None Remove="..\TrainReservation.UI\.browserslistrc" />
    <None Remove="..\TrainReservation.UI\.editorconfig" />
    <None Remove="..\TrainReservation.UI\.eslintrc.js" />
    <None Remove="..\TrainReservation.UI\.gitignore" />
    <None Remove="..\TrainReservation.UI\angular.json" />
    <None Remove="..\TrainReservation.UI\package-lock.json" />
    <None Remove="..\TrainReservation.UI\package.json" />
    <None Remove="..\TrainReservation.UI\README.md" />
    <None Remove="..\TrainReservation.UI\TrainReservation.UI.csproj" />
    <None Remove="..\TrainReservation.UI\TrainReservation.UI.csproj.user" />
    <None Remove="..\TrainReservation.UI\tsconfig.json" />
    <None Remove="..\TrainReservation.UI\tslint-to-eslint-config.log" />
  </ItemGroup>

  <ItemGroup>
    <None Include="Properties\launchSettings.json" />
  </ItemGroup>

	<ItemGroup>
    <ProjectReference Include="..\TrainReservation.Infrastructure\TrainReservation.Infrastructure.csproj" />
    <ProjectReference Include="..\TrainReservation.UI\TrainReservation.UI.csproj" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

	<Target Name="CopyAngularDistFiles" AfterTargets="Build">
		<Exec Command="xcopy /E /I /Y $(SpaRoot)dist\** wwwroot\" />
	</Target>

</Project>
